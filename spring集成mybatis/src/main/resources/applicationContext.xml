<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 读取属性配置文件jdbc.properties
        location属性：指定属性配置文件的位置，使用classpath表示类路径
     -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 组件扫描器-->
    <context:component-scan base-package="com.nrvcer.service"/>
    <!-- 配置DruidDataSource数据源-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource"
            init-method="init" destroy-method="close">
        <property name="username" value="${jdbc.username}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!-- 注册SqlSessionFactoryBean的bean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定mybatis的主配置文件位置 -->
        <property name="configLocation" value="classpath:mybatis.xml"></property>
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>
    <!-- 定义mapper扫描配置器MapperScannerConfigurer
        该扫描配置器会自动生成指定的基本包中mapper的代理对象，
        该扫描配置器无需设置id属性
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--指定基本扫描包，即Dao接口包 -->
        <property name="basePackage" value="com.nrvcer.dao"></property>
    </bean>
</beans>